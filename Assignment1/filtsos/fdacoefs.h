/*
 * Filter Coefficients (C Source) generated by the Filter Design and Analysis Tool
 * Generated by MATLAB(R) 9.3 and Signal Processing Toolbox 7.5.
 */

/*
 * Discrete-Time IIR Filter (real)
 * -------------------------------
 * Filter Structure    : Direct-Form II, Second-Order Sections
 * Number of Sections  : 3
 * Stable              : Yes
 * Linear Phase        : No
 */

#define MWSPT_NSEC 7
#define BLOCKSIZE 1024

typedef struct
{
	char RiffSignature[4]; // Should be "RIFF"
	uint32_t FileLengthMinus8Byte; // Should be WAV file length minus 8 Byte
	char WaveSignature[4]; // Should be "WAVE"
} RiffHeader;

typedef struct
{
	char fmtSignature[4]; // Should be "fmt " (including space)
	uint32_t RemainingHeaderLength; // Should be 16 Byte
	uint16_t fmtTag; // e.g. 0x01 for PCM
	uint16_t NumChannels; // e.g. 2 for Stereo
	uint32_t SamplingRate; // e.g. 44100 Hz
	uint32_t BytesPerSecond; // e.g. 176400 (= 44100 * 4) Bytes per Second for Stereo 16-bit PCM???
	uint16_t BlockAlign; // e.g. 4 Bytes for Stereo 16-bit PCM
	uint16_t BitsPerSample; // e.g. 16 for a 16-bit PCM channel
} FmtHeader;

typedef struct
{
	char DataSignature[4]; // Should be "data"
	uint32_t DataLength; // Maximum: File length - 44
} DataHeader;

typedef struct
{
	RiffHeader riffHeader;
	FmtHeader fmtHeader;
	DataHeader dataHeader;
} WaveHeader;

const int b_len[MWSPT_NSEC] = { 1,3,1,3,1,3,1 };
const float b[MWSPT_NSEC][3] = {
  {0.9957446456,0,0},
  {1,-1.979935884,1},
  {0.9957446456,0,0},
  {1,-1.979935884,1},
  {0.9915784001,0,0},
  {1,-1.979935884,1},
  {1,0,0}
};
const int a_len[MWSPT_NSEC] = { 1,3,1,3,1,3,1 };
const float a[MWSPT_NSEC][3] = {
  {1,0,0},
  {1,-1.968955159,0.9911097288},
  {1, 0,0},
  {1,-1.97396028,0.9919769168},
  {1,0,0},
  {1,-1.963261604,0.9831567407},
  {1,0,0}
};

void njfilter(int16_t x[], int16_t y[]);
